// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Monad_Free = require("../Control.Monad.Free");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Class = require("../Data.Foreign.Class");
var Data_Foreign_Generic_Class = require("../Data.Foreign.Generic.Class");
var Data_Function = require("../Data.Function");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Symbol = require("../Data.Symbol");
var Prelude = require("../Prelude");
var Presto_Core_Types_API = require("../Presto.Core.Types.API");
var Presto_Core_Types_Language_Interaction = require("../Presto.Core.Types.Language.Interaction");
var Presto_Core_Utils_Encoding = require("../Presto.Core.Utils.Encoding");
var apiInteract = function (dictEncode) {
    return function (dictDecode) {
        return function (dictRestEndpoint) {
            return function (a) {
                return function (headers) {
                    return Control_Bind.bind(Control_Monad_Free.freeBind)(Presto_Core_Types_Language_Interaction.request(Data_Foreign_Class.encode(Presto_Core_Types_API.encodeRequestG)(Presto_Core_Types_API.makeRequest(dictRestEndpoint)(a)(headers))))(function (v) {
                        return Control_Applicative.pure(Control_Monad_Free.freeApplicative)((function () {
                            var v1 = Control_Monad_Except.runExcept(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Class.decode(Data_Foreign_Class.stringDecode)(v))(Presto_Core_Types_API.decodeResponse(dictRestEndpoint)));
                            if (v1 instanceof Data_Either.Right) {
                                return new Data_Either.Right(v1.value0);
                            };
                            if (v1 instanceof Data_Either.Left) {
                                return Data_Either.Left.create((function () {
                                    var v2 = Control_Monad_Except.runExcept(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Class.decode(Data_Foreign_Class.stringDecode)(v))(Presto_Core_Utils_Encoding.defaultDecodeJSON(Presto_Core_Types_API.genericResponse)(Data_Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
                                        return "Response";
                                    }))(Data_Foreign_Generic_Class.genericDecodeArgsRec(Data_Foreign_Generic_Class.genericDecodeFieldsProduct(Data_Foreign_Generic_Class.genericDecodeFieldsField(new Data_Symbol.IsSymbol(function () {
                                        return "code";
                                    }))(Data_Foreign_Class.intDecode))(Data_Foreign_Generic_Class.genericDecodeFieldsProduct(Data_Foreign_Generic_Class.genericDecodeFieldsField(new Data_Symbol.IsSymbol(function () {
                                        return "response";
                                    }))(Presto_Core_Types_API.decodeErrorPayload))(Data_Foreign_Generic_Class.genericDecodeFieldsField(new Data_Symbol.IsSymbol(function () {
                                        return "status";
                                    }))(Data_Foreign_Class.stringDecode)))))(Data_Foreign_Generic_Class.genericCountArgsRec))));
                                    if (v2 instanceof Data_Either.Right) {
                                        return v2.value0;
                                    };
                                    if (v2 instanceof Data_Either.Left) {
                                        return {
                                            code: 0, 
                                            status: "", 
                                            response: {
                                                error: true, 
                                                errorMessage: Data_Show.show(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(v1.value0) + ("\x0a" + Data_Show.show(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(v2.value0)), 
                                                userMessage: "Unknown error"
                                            }
                                        };
                                    };
                                    throw new Error("Failed pattern match at Presto.Core.Types.Language.APIInteract line 24, column 22 - line 33, column 43: " + [ v2.constructor.name ]);
                                })());
                            };
                            throw new Error("Failed pattern match at Presto.Core.Types.Language.APIInteract line 21, column 10 - line 33, column 43: " + [ v1.constructor.name ]);
                        })());
                    });
                };
            };
        };
    };
};
module.exports = {
    apiInteract: apiInteract
};
