// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Free = require("../Control.Monad.Free");
var Data_Foldable = require("../Data.Foldable");
var Data_Maybe = require("../Data.Maybe");
var Data_Traversable = require("../Data.Traversable");
var Prelude = require("../Prelude");
var Presto_Core_Types_Language_Flow = require("../Presto.Core.Types.Language.Flow");
var Presto_Core_Types_Language_Storage = require("../Presto.Core.Types.Language.Storage");
var untilSuccessful = function (dictMonad) {
    return function (flow) {
        return Control_Bind.bind(dictMonad.Bind1())(flow)(function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return untilSuccessful(dictMonad)(flow);
            };
            if (v instanceof Data_Maybe.Just) {
                return Control_Applicative.pure(dictMonad.Applicative0())(v.value0);
            };
            throw new Error("Failed pattern match at Presto.Core.Operators line 27, column 3 - line 29, column 21: " + [ v.constructor.name ]);
        });
    };
};
var until = function (dictMonad) {
    return function (pred) {
        return function (flow) {
            return Control_Bind.bind(dictMonad.Bind1())(flow)(function (v) {
                var v1 = pred(v);
                if (!v1) {
                    return until(dictMonad)(pred)(flow);
                };
                if (v1) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(v);
                };
                throw new Error("Failed pattern match at Presto.Core.Operators line 34, column 3 - line 36, column 24: " + [ v1.constructor.name ]);
            });
        };
    };
};
var orRun = function (dictMonad) {
    return function (value) {
        return function (flow) {
            return Control_Bind.bind(dictMonad.Bind1())(value)(function (v) {
                if (v instanceof Data_Maybe.Just) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(v.value0);
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return flow;
                };
                throw new Error("Failed pattern match at Presto.Core.Operators line 13, column 3 - line 15, column 20: " + [ v.constructor.name ]);
            });
        };
    };
};
var orElse = function (dictMonad) {
    return function (f1) {
        return function (f2) {
            return Control_Bind.bind(dictMonad.Bind1())(f1)(function (v) {
                if (v instanceof Data_Maybe.Just) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Maybe.Just(v.value0));
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return f2;
                };
                throw new Error("Failed pattern match at Presto.Core.Operators line 20, column 3 - line 22, column 18: " + [ v.constructor.name ]);
            });
        };
    };
};
var onFirstRun = function (dictSerializable) {
    return function (key) {
        return function (flow) {
            return Control_Bind.bind(Control_Monad_Free.freeBind)(Presto_Core_Types_Language_Flow.load(dictSerializable)(key))(function (v) {
                if (v instanceof Data_Maybe.Just) {
                    return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v.value0);
                };
                if (v instanceof Data_Maybe.Nothing) {
                    return Control_Bind.bind(Control_Monad_Free.freeBind)(flow)(function (v1) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Presto_Core_Types_Language_Flow.save(dictSerializable)(key)(v1))(function () {
                            return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v1);
                        });
                    });
                };
                throw new Error("Failed pattern match at Presto.Core.Operators line 43, column 3 - line 48, column 17: " + [ v.constructor.name ]);
            });
        };
    };
};
var inParallel$prime = Data_Foldable.traverse_(Control_Monad_Free.freeApplicative)(Data_Foldable.foldableArray)(Presto_Core_Types_Language_Flow.launch);
var inParallel = Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Free.freeApplicative)(Presto_Core_Types_Language_Flow.fork);
module.exports = {
    inParallel: inParallel, 
    "inParallel'": inParallel$prime, 
    onFirstRun: onFirstRun, 
    orElse: orElse, 
    orRun: orRun, 
    until: until, 
    untilSuccessful: untilSuccessful
};
