// Generated by purs version 0.11.6
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Free = require("../Control.Monad.Free");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Class = require("../Data.Foreign.Class");
var Data_Function = require("../Data.Function");
var Data_List_Types = require("../Data.List.Types");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var ForeignOut = function (x) {
    return x;
};
var ForeignIn = function (x) {
    return x;
};
var Request = (function () {
    function Request(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Request.create = function (value0) {
        return function (value1) {
            return new Request(value0, value1);
        };
    };
    return Request;
})();
var Interact = function (Decode1, Encode0, interact) {
    this.Decode1 = Decode1;
    this.Encode0 = Encode0;
    this.interact = interact;
};
var request = function (fgnIn) {
    return Control_Bind.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftF(new Request(fgnIn, Control_Category.id(Control_Category.categoryFn))))(function (v) {
        return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v);
    });
};
var interact = function (dict) {
    return dict.interact;
};
var interactConv = function (dictInteract) {
    return function (a) {
        return function (from) {
            return Control_Bind.bind(Control_Monad_Free.freeBind)(interact(dictInteract)(a))(function (v) {
                return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(Control_Bind.bind(Data_Either.bindEither)(v)(from));
            });
        };
    };
};
var defaultInteract = function (dictEncode) {
    return function (dictDecode) {
        return function (a) {
            return Control_Bind.bind(Control_Monad_Free.freeBind)(request(Data_Foreign_Class.encode(dictEncode)(a)))(function (v) {
                var v1 = Control_Monad_Except.runExcept(Data_Foreign_Class.decode(dictDecode)(v));
                if (v1 instanceof Data_Either.Right) {
                    return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(new Data_Either.Right(v1.value0));
                };
                if (v1 instanceof Data_Either.Left) {
                    return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(Data_Either.Left.create(Control_Monad_Eff_Exception.error(Data_Show.show(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(v1.value0))));
                };
                throw new Error("Failed pattern match at Presto.Core.Types.Language.Interaction line 51, column 3 - line 53, column 42: " + [ v1.constructor.name ]);
            });
        };
    };
};
module.exports = {
    ForeignIn: ForeignIn, 
    ForeignOut: ForeignOut, 
    Request: Request, 
    Interact: Interact, 
    defaultInteract: defaultInteract, 
    interact: interact, 
    interactConv: interactConv, 
    request: request
};
