// Generated by purs version 0.11.6
"use strict";
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Function = require("../Data.Function");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var Test_Spec_Color = require("../Test.Spec.Color");
var Fast = (function () {
    function Fast() {

    };
    Fast.value = new Fast();
    return Fast;
})();
var Medium = (function () {
    function Medium() {

    };
    Medium.value = new Medium();
    return Medium;
})();
var Slow = (function () {
    function Slow() {

    };
    Slow.value = new Slow();
    return Slow;
})();
var toColor = function (v) {
    if (v instanceof Fast) {
        return Test_Spec_Color.Fast.value;
    };
    if (v instanceof Medium) {
        return Test_Spec_Color.Medium.value;
    };
    if (v instanceof Slow) {
        return Test_Spec_Color.Slow.value;
    };
    throw new Error("Failed pattern match at Test.Spec.Speed line 23, column 1 - line 23, column 26: " + [ v.constructor.name ]);
};
var speedOf = function (v) {
    return function (v1) {
        if (v1 > v) {
            return Slow.value;
        };
        if (v1 > (v / 2 | 0)) {
            return Medium.value;
        };
        return Fast.value;
    };
};
var toColor$prime = function (thresh) {
    return function (ms) {
        return toColor(speedOf(thresh)(ms));
    };
};
var genericSpeed = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Test.Spec.Speed.Fast" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Fast.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Test.Spec.Speed.Medium" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Medium.value);
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Test.Spec.Speed.Slow" && v.value1.length === 0)) {
        return new Data_Maybe.Just(Slow.value);
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Test.Spec.Speed.Speed", [ {
        sigConstructor: "Test.Spec.Speed.Fast", 
        sigValues: [  ]
    }, {
        sigConstructor: "Test.Spec.Speed.Medium", 
        sigValues: [  ]
    }, {
        sigConstructor: "Test.Spec.Speed.Slow", 
        sigValues: [  ]
    } ]);
}, function (v) {
    if (v instanceof Fast) {
        return new Data_Generic.SProd("Test.Spec.Speed.Fast", [  ]);
    };
    if (v instanceof Medium) {
        return new Data_Generic.SProd("Test.Spec.Speed.Medium", [  ]);
    };
    if (v instanceof Slow) {
        return new Data_Generic.SProd("Test.Spec.Speed.Slow", [  ]);
    };
    throw new Error("Failed pattern match at Test.Spec.Speed line 10, column 8 - line 10, column 46: " + [ v.constructor.name ]);
});
var showSpeed = new Data_Show.Show(Data_Generic.gShow(genericSpeed));
module.exports = {
    Fast: Fast, 
    Medium: Medium, 
    Slow: Slow, 
    speedOf: speedOf, 
    toColor: toColor, 
    "toColor'": toColor$prime, 
    genericSpeed: genericSpeed, 
    showSpeed: showSpeed
};
